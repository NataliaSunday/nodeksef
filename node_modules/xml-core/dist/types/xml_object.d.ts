import { AssocArray, IXmlSerializable, XmlAttributeType, XmlChildElementType, XmlSchema } from "./types";
export declare class XmlObject implements IXmlSerializable {
    static LoadXml<T extends XmlObject>(this: new () => T, param: string | Element): T;
    static GetElement(element: Element, name: string, required?: boolean): Element;
    static GetAttribute(element: Element, attrName: string, defaultValue: string | null, required?: boolean): string | null;
    static GetElementById(element: Document | Element, idValue: string): Element | null;
    /**
     * Creates new instance of XmlDocument with given name of root element
     * @param  {string} root Name of root element
     * @param  {string} namespaceUri
     * @param  {string} prefix
     * @returns Document
     */
    static CreateDocument(root?: string, namespaceUri?: string | null, prefix?: string | null): Document;
    static GetChildren(node: Node, localName: string, nameSpace?: string): Element[];
    static GetFirstChild(node: Node, localName: string, nameSpace?: string): Element | null;
    static GetChild(node: Element, localName: string, nameSpace?: string, required?: boolean): Element | null;
    protected static attributes: AssocArray<XmlAttributeType<any>>;
    protected static elements: AssocArray<XmlChildElementType<any>>;
    protected static prefix: string | null;
    protected static namespaceURI: string | null;
    protected static localName: string;
    /**
     * XmlElement
     * undefined - class initialized
     * null - has some changes
     * element - has cached element
     *
     * @protected
     * @type {(Element | null | undefined)}
     * @memberOf XmlObject
     */
    protected element?: Element | null;
    protected prefix: string | null;
    protected localName: string | undefined;
    protected namespaceURI: string | null | undefined;
    constructor(properties?: Object);
    get Element(): Element | null | undefined;
    get Prefix(): string | null;
    set Prefix(value: string | null);
    get LocalName(): string;
    get NamespaceURI(): string | null;
    HasChanged(): boolean;
    GetXml(hard?: boolean): Element | null;
    LoadXml(param: string | Element): void;
    /**
     * Returns current Xml as string
     * - if element was initialized without changes, returns empty string
     */
    toString(): string;
    GetElement(name: string, required?: boolean): Element;
    GetChildren(localName: string, nameSpace?: string): Element[];
    GetChild(localName: string, required?: boolean): Element | null;
    GetFirstChild(localName: string, namespace?: string): Element | null;
    GetAttribute(name: string, defaultValue: string | null, required?: boolean): string | null;
    IsEmpty(): boolean;
    protected OnLoadXml(element: Element): void;
    protected GetStatic(): XmlSchema;
    protected GetPrefix(): string;
    protected OnGetXml(element: Element): void;
    protected CreateElement(document?: Document, localName?: string, namespaceUri?: string | null, prefix?: string | null): Element;
    protected CreateDocument(): Document;
}

import { ICollection } from "./types";
export declare class Collection<I> implements ICollection<I> {
    protected items: I[];
    constructor(items?: I[]);
    get Count(): number;
    Item(index: number): I | null;
    Add(item: I): void;
    Pop(): I | undefined;
    RemoveAt(index: number): void;
    Clear(): void;
    GetIterator(): I[];
    ForEach(cb: (item: I, index: number, array: I[]) => void): void;
    Map<U>(cb: (item: I, index: number, array: I[]) => U): Collection<U>;
    Filter(cb: (item: I, index: number, array: I[]) => boolean): Collection<I>;
    Sort(cb: (a: I, b: I) => number): Collection<I>;
    Every(cb: (value: I, index: number, array: I[]) => boolean): boolean;
    Some(cb: (value: I, index: number, array: I[]) => boolean): boolean;
    IsEmpty(): boolean;
}

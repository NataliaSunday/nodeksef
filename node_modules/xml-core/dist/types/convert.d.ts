import { XmlBufferEncoding } from "./types";
export declare class Convert {
    static ToString(buffer: BufferSource, enc?: XmlBufferEncoding): string;
    static FromString(str: string, enc?: XmlBufferEncoding): Uint8Array;
    static ToBase64(buf: Uint8Array): string;
    static FromBase64(base64Text: string): Uint8Array;
    static FromBase64Url(base64url: string): Uint8Array;
    static ToBase64Url(data: Uint8Array): string;
    static FromUtf8String(text: string): Uint8Array;
    static ToUtf8String(buffer: Uint8Array): string;
    static FromBinary(text: string): Uint8Array;
    static ToBinary(buffer: Uint8Array): string;
    /**
     * Converts buffer to HEX string
     * @param  {BufferSource} buffer Incoming buffer
     * @returns string
     */
    static ToHex(buffer: Uint8Array): string;
    /**
     * Converts HEX string to buffer
     *
     * @static
     * @param {string} hexString
     * @returns {Uint8Array}
     *
     * @memberOf Convert
     */
    static FromHex(hexString: string): Uint8Array;
    /**
     * Converts string to Date
     *
     * @static
     * @param {string} dateTime
     * @returns {Date}
     *
     * @memberOf Convert
     */
    static ToDateTime(dateTime: string): Date;
    /**
     * Converts Date to string
     *
     * @static
     * @param {Date} dateTime
     * @returns {string}
     *
     * @memberOf Convert
     */
    static FromDateTime(dateTime: Date): string;
    protected static Base64Padding(base64: string): string;
}

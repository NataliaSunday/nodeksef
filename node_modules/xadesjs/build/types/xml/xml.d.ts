export declare let XmlXades: {
    DefaultPrefix: string;
    /**
     * The XAdES XML namespace URI
     */
    NamespaceURI: string;
    /**
     * Mandated type name for the Uri reference to the SignedProperties element
     */
    SignedPropertiesType: string;
    ElementNames: {
        Any: string;
        ByName: string;
        ByKey: string;
        AttrAuthoritiesCertValues: string;
        AttributeRevocationValues: string;
        AttributeCertificateRefs: string;
        AttributeRevocationRefs: string;
        QualifyingProperties: string;
        QualifyingPropertiesReference: string;
        SignedProperties: string;
        SignedSignatureProperties: string;
        SignedDataObjectProperties: string;
        UnsignedProperties: string;
        UnsignedSignatureProperties: string;
        UnsignedDataObjectProperties: string;
        UnsignedDataObjectProperty: string;
        SigningTime: string;
        SigningCertificate: string;
        SignaturePolicyIdentifier: string;
        SignatureProductionPlace: string;
        SignerRole: string;
        Cert: string;
        CertDigest: string;
        IssuerSerial: string;
        DataObjectFormat: string;
        CommitmentTypeIndication: string;
        AllDataObjectsTimeStamp: string;
        IndividualDataObjectsTimeStamp: string;
        HashDataInfo: string;
        EncapsulatedTimeStamp: string;
        XMLTimeStamp: string;
        XAdESTimeStamp: string;
        OtherTimeStamp: string;
        Description: string;
        ObjectIdentifier: string;
        MimeType: string;
        Encoding: string;
        Identifier: string;
        DocumentationReferences: string;
        DocumentationReference: string;
        CommitmentTypeId: string;
        ObjectReference: string;
        CommitmentTypeQualifiers: string;
        AllSignedDataObjects: string;
        CommitmentTypeQualifier: string;
        SignaturePolicyId: string;
        SignaturePolicyImplied: string;
        SigPolicyId: string;
        SigPolicyHash: string;
        SigPolicyQualifier: string;
        SigPolicyQualifiers: string;
        SPURI: string;
        SPUserNotice: string;
        NoticeRef: string;
        ExplicitText: string;
        ClaimedRoles: string;
        ClaimedRole: string;
        CertifiedRoles: string;
        CertifiedRole: string;
        Organization: string;
        NoticeNumbers: string;
        Int: string;
        City: string;
        PostalCode: string;
        StateOrProvince: string;
        CountryName: string;
        CounterSignature: string;
        SignatureTimeStamp: string;
        CompleteCertificateRefs: string;
        CompleteRevocationRefs: string;
        SigAndRefsTimeStamp: string;
        RefsOnlyTimeStamp: string;
        CertificateValues: string;
        RevocationValues: string;
        ArchiveTimeStamp: string;
        CertRefs: string;
        CRLRefs: string;
        CRLRef: string;
        OCSPRefs: string;
        OtherRefs: string;
        OtherRef: string;
        DigestAlgAndValue: string;
        CRLIdentifier: string;
        Issuer: string;
        IssueTime: string;
        Number: string;
        OCSPRef: string;
        OCSPIdentifier: string;
        ResponderID: string;
        ProducedAt: string;
        EncapsulatedX509Certificate: string;
        OtherCertificate: string;
        CRLValues: string;
        OCSPValues: string;
        OtherValues: string;
        OtherValue: string;
        EncapsulatedCRLValue: string;
        EncapsulatedOCSPValue: string;
        ReferenceInfo: string;
        Include: string;
    };
    AttributeNames: {
        Id: string;
        Encoding: string;
        Target: string;
        ObjectReference: string;
        Qualifier: string;
        Uri: string;
        URI: string;
        ReferencedData: string;
    };
};
